import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import * as Localization from 'expo-localization';

const resources = {
  en: {
    translation: {
      welcome: 'Welcome to Hobbyist!',
      loginButton: 'Login or Sign Up',
      phoneNumberPlaceholder: 'e.g., +1 555 123 4567',
      sendCodeButton: 'Send Verification Code',
      verifyCodeButton: 'Verify Code',
      codePlaceholder: '6-digit code',
      alertTitle: 'Notification',
      alertMessagePhoneFormat: 'Please enter a valid phone number with country code (e.g., +82 10 1234 5678).',
      alertCodeSent: 'Code Sent!',
      alertCodeSentMessage: 'A verification code has been sent to your phone number.',
      alertError: 'Error',
      alertVerificationFailed: 'Verification failed. Incorrect code or connection issue.',
      alertLoginSuccess: 'Phone number verified successfully!',
      alertLogoutSuccess: 'Logged out successfully.',
      splashLoading: 'Loading app...',
      authTitle: 'Start with Hobbyist',
      authSubtitle: 'Login or sign up to continue.',
      authPolicy: 'By continuing, you agree to Hobbyist\'s Terms of Service and Privacy Policy.',
      sendingButton: 'Sending...',
      verifyingButton: 'Verifying...',
      alertUnknownError: 'Unknown error',
      alertNetworkErrorTitle: 'Network Error',
      alertNetworkErrorMessage: 'Could not connect to the server. Please check if the backend is running and the URL is correct.',
      alertPleaseGetCodeFirst: 'Please get the verification code first.',
      alertEnter6DigitCode: 'Please enter a 6-digit verification code.',
      alertSuccess: 'Success',
      alertPhoneVerifiedSuccess: 'Phone number verified successfully!',
      alertIncorrectCode: 'Invalid verification code.',
      alertLoginFailedNoToken: 'Login successful, but no token received. Please try again.',
      homeTab: 'Home',
      exploreTab: 'Explore',
      createTab: 'Create',
      notificationsTab: 'Notifications',
      profileTab: 'Profile',
      logoutButton: 'Logout',
      mainAppTitle: 'Main App',
      greeting: 'Hello, Hobbyist!',
      greeting_with_name: 'Hello, {{name}}',
      recommendedHobbiesTitle: 'Recommended for you',
      nearbyHobbiesTitle: 'Hobbyists near you',
      activityFeedTitle: 'Recent Activities',
      viewAll: 'View all',
      join: 'Join',
      mockHobby1: 'Photography Club',
      mockHobby2: 'Hiking Group',
      mockHobby3: 'Drawing Class',
      mockHobby4: 'Cooking Workshop',
      mockHobby5: 'Yoga Session',
      mockActivity1: 'shared new photos from mountain hiking.',
      mockActivity2: 'just completed a painting.',
      mockActivity3: 'posted a new recipe!',
      exploreScreenTitle: 'Explore Hobbies & Classes',
      searchPlaceholder: 'Search for hobbies or classes...',
      noHobbiesFound: 'No hobbies or classes found.',
      profileScreenTitle: 'My Profile',
      editProfileButton: 'Edit Profile',
      myPhoneNumber: 'My Phone Number:',
      myInterests: 'My Interests',
      myHobbies: 'My Hobbies',
      myPosts: 'My Posts',
      noInterests: 'No interests added yet.',
      noHobbiesJoined: 'No hobbies joined yet.',
      noPosts: 'No posts yet.',
      addInterests: 'Add Interests',
      profileNickname: 'Nickname:',
      profileBio: 'Bio:',
      profileBioDefault: 'Tell us about yourself!',
      loadingProfile: 'Loading profile...',
      notificationsScreenTitle: 'Notifications',
      noNotifications: 'No new notifications.',
      notificationTypeNewMessage: 'New Message',
      notificationTypeActivityUpdate: 'Activity Update',
      notificationTypeJoinRequest: 'Join Request',
      notificationTypeSystem: 'System Notification',
      notificationMessageNewPost: '{{userName}} posted a new activity.',
      notificationMessageJoinRequest: '{{userName}} sent a join request to {{hobbyName}}.',
      notificationMessageSystem: 'Welcome to Hobbyist! Explore new hobbies.',
      listView: 'List View',
      mapView: 'Map View',
      categoryFilter: 'Category',
      allCategories: 'All Categories',
      locationPermissionDenied: 'Location permission was denied. Cannot show map.',
      gettingLocation: 'Getting your location...',
      categoryPhotography: 'Photography',
      categoryOutdoor: 'Outdoor',
      categoryArt: 'Art',
      categoryCooking: 'Cooking',
      categoryFitness: 'Fitness',
      gettingHobbies: 'Getting hobbies...',
      gettingLocationFailed: 'Failed to get location.',
      retryLocation: 'Retry Location',
      createPostTitle: 'Create New Post',
      postContentPlaceholder: 'What\'s on your mind?',
      selectImageButton: 'Select Image',
      postButton: 'Post',
      posting: 'Posting...',
      postSuccess: 'Post created successfully!',
      postFailed: 'Failed to create post. Please try again.',
      imageSelectionCancelled: 'Image selection cancelled.',
      imageSelectionError: 'Error selecting image.',
      noContentOrImage: 'Please enter some content or select an image to post.',
      hobbyDetailTitle: 'Hobby Details',
      membersCount: '{{count}} members',
      description: 'Description',
      location: 'Location',
      joinHobby: 'Join Hobby',
      hobbyNotFound: 'Hobby not found.',
      createSelectionTitle: 'What do you want to create?',
      createActivityPost: 'Activity Post',
      createHobbyClass: 'Hobby/Class',
      createHobbyTitle: 'Create New Hobby/Class',
      hobbyNamePlaceholder: 'Hobby/Class Name',
      hobbyCategoryPlaceholder: 'Category (e.g., Photography)',
      hobbyDescriptionPlaceholder: 'Describe your hobby/class',
      hobbyMembersPlaceholder: 'Number of members',
      hobbyImageUrlPlaceholder: 'Image URL (optional)',
      createHobbyButton: 'Create Hobby/Class',
      creatingHobby: 'Creating...',
      hobbyCreateSuccess: 'Hobby/Class created successfully!',
      hobbyCreateFailed: 'Failed to create hobby/class. Please try again.',
      joiningHobby: 'Joining...',
      joinedHobby: 'Joined',
      joinHobbyFailed: 'Failed to join hobby. Please try again.',
      imageUploadFailed: 'Image upload failed. Please try again.',
      membersTitle: 'Members',
      noMembers: 'No members yet.',
      membersMustBeNumber: 'Number of members must be a number.',
      // ⭐ Added keys for location picker
      locationPickerTitle: 'Select Location',
      locationPickerMessage: 'Drag the pin to set the hobby\'s location.',
      setLocationButton: 'Set Location',
      gettingLocationButton: 'Getting location...',
      locationPermissionDeniedMap: 'Location permission is required to use the map.',
    },
  },
  ko: {
    translation: {
      welcome: '하비스트에 오신 것을 환영합니다!',
      loginButton: '로그인 또는 회원가입',
      phoneNumberPlaceholder: '예: +82 10 1234 5678',
      sendCodeButton: '인증번호 보내기',
      verifyCodeButton: '인증 코드 확인',
      codePlaceholder: '6자리 코드',
      alertTitle: '알림',
      alertMessagePhoneFormat: '국가번호를 포함한 올바른 전화번호 형식을 입력해주세요. (예: +82 10 1234 5678).',
      alertCodeSent: '코드 발송 완료!',
      alertCodeSentMessage: '인증번호를 문자로 전송했습니다.',
      alertError: '오류',
      alertVerificationFailed: '인증 실패. 잘못된 코드 또는 연결 문제입니다.',
      alertLoginSuccess: '전화번호 인증 완료!',
      alertLogoutSuccess: '로그아웃 되었습니다.',
      splashLoading: '앱 로딩 중...',
      authTitle: '하비스트 시작하기',
      authSubtitle: '계속하려면 로그인하거나 회원가입하세요.',
      authPolicy: '계속 진행하면 Hobbyist의 이용 약관 및 개인 정보 보호 정책에 동의하는 것으로 간주됩니다.',
      sendingButton: '전송 중...',
      verifyingButton: '확인 중...',
      alertUnknownError: '알 수 없는 오류',
      alertNetworkErrorTitle: '네트워크 오류',
      alertNetworkErrorMessage: '서버에 연결할 수 없습니다. 백엔드가 실행 중인지 확인하고 URL을 확인하세요.',
      alertPleaseGetCodeFirst: '먼저 인증번호를 받아주세요.',
      alertEnter6DigitCode: '인증 코드 6자리를 입력해주세요.',
      alertSuccess: '성공',
      alertPhoneVerifiedSuccess: '전화번호 인증 완료!',
      alertIncorrectCode: '잘못된 인증번호입니다.',
      alertLoginFailedNoToken: '로그인 성공했으나 토큰을 받지 못했습니다. 다시 시도해주세요.',
      homeTab: '홈',
      exploreTab: '탐색',
      createTab: '생성',
      notificationsTab: '알림',
      profileTab: '프로필',
      logoutButton: '로그아웃',
      mainAppTitle: '메인 앱',
      greeting: '안녕하세요, 하비스트님!',
      greeting_with_name: '안녕하세요, {{name}}님!',
      recommendedHobbiesTitle: '당신을 위한 추천',
      nearbyHobbiesTitle: '내 주변 동호인/동호회',
      activityFeedTitle: '최신 활동',
      viewAll: '모두 보기',
      join: '참여하기',
      mockHobby1: '사진 동호회',
      mockHobby2: '등산 모임',
      mockHobby3: '그림 그리기 클래스',
      mockHobby4: '요리 워크숍',
      mockHobby5: '요가 세션',
      mockActivity1: '님이 등산 사진을 새로 공유했습니다.',
      mockActivity2: '님이 방금 그림을 완성했습니다.',
      mockActivity3: '님이 새로운 레시피를 게시했습니다!',
      exploreScreenTitle: '동호회 & 클래스 탐색',
      searchPlaceholder: '동호회나 클래스를 검색하세요...',
      noHobbiesFound: '동호회나 클래스를 찾을 수 없습니다.',
      profileScreenTitle: '내 프로필',
      editProfileButton: '프로필 편집',
      myPhoneNumber: '내 전화번호:',
      myInterests: '내 관심사',
      myHobbies: '참여 동호회',
      myPosts: '내 활동 게시물',
      noInterests: '아직 추가된 관심사가 없습니다.',
      noHobbiesJoined: '아직 참여한 동호회가 없습니다.',
      noPosts: '아직 작성한 게시물이 없습니다.',
      addInterests: '관심사 추가',
      profileNickname: '닉네임:',
      profileBio: '소개:',
      profileBioDefault: '자신을 소개해 보세요!',
      loadingProfile: '프로필 로딩 중...',
      notificationsScreenTitle: '알림',
      noNotifications: '새로운 알림이 없습니다.',
      notificationTypeNewMessage: '새 메시지',
      notificationTypeActivityUpdate: '활동 업데이트',
      notificationTypeJoinRequest: '가입 요청',
      notificationTypeSystem: '시스템 알림',
      notificationMessageNewPost: '{{userName}}님이 새로운 활동을 게시했습니다.',
      notificationMessageJoinRequest: '{{userName}}님이 {{hobbyName}}에 가입 요청을 보냈습니다.',
      notificationMessageSystem: '하비스트에 오신 것을 환영합니다! 새로운 취미를 탐색해 보세요.',
      listView: '목록 보기',
      mapView: '지도 보기',
      categoryFilter: '카테고리',
      allCategories: '모든 카테고리',
      locationPermissionDenied: '위치 권한이 거부되었습니다. 지도를 표시할 수 없습니다.',
      gettingLocation: '위치 가져오는 중...',
      categoryPhotography: '사진',
      categoryOutdoor: '아웃도어',
      categoryArt: '미술',
      categoryCooking: '요리',
      categoryFitness: '피트니스',
      gettingHobbies: '동호회 가져오는 중...',
      gettingLocationFailed: '위치 가져오기 실패',
      retryLocation: '위치 다시 시도',
      createPostTitle: '새 게시물 작성',
      postContentPlaceholder: '무슨 생각을 하고 계신가요?',
      selectImageButton: '이미지 선택',
      postButton: '게시',
      posting: '게시 중...',
      postSuccess: '게시물이 성공적으로 작성되었습니다!',
      postFailed: '게시물 작성에 실패했습니다. 다시 시도해주세요.',
      imageSelectionCancelled: '이미지 선택이 취소되었습니다.',
      imageSelectionError: '이미지 선택 중 오류가 발생했습니다.',
      noContentOrImage: '게시할 내용을 입력하거나 이미지를 선택해주세요.',
      hobbyDetailTitle: '동호회 상세 정보',
      membersCount: '{{count}}명',
      description: '설명',
      location: '위치',
      joinHobby: '동호회 참여',
      hobbyNotFound: '동호회를 찾을 수 없습니다.',
      createSelectionTitle: '무엇을 만드시겠어요?',
      createActivityPost: '활동 게시물',
      createHobbyClass: '동호회/클래스',
      createHobbyTitle: '새 동호회/클래스 생성',
      hobbyNamePlaceholder: '동호회/클래스 이름',
      hobbyCategoryPlaceholder: '카테고리 (예: 사진)',
      hobbyDescriptionPlaceholder: '동호회/클래스를 설명해주세요',
      hobbyMembersPlaceholder: '멤버 수',
      hobbyImageUrlPlaceholder: '이미지 URL (선택 사항)',
      createHobbyButton: '동호회/클래스 생성',
      creatingHobby: '생성 중...',
      hobbyCreateSuccess: '동호회/클래스가 성공적으로 생성되었습니다!',
      hobbyCreateFailed: '동호회/클래스 생성에 실패했습니다. 다시 시도해주세요.',
      joiningHobby: '참여 중...',
      joinedHobby: '참여 완료',
      joinHobbyFailed: '동호회 참여에 실패했습니다. 다시 시도해주세요.',
      imageUploadFailed: '이미지 업로드에 실패했습니다. 다시 시도해주세요.',
      membersTitle: '멤버',
      noMembers: '아직 멤버가 없습니다.',
      membersMustBeNumber: '멤버 수는 숫자여야 합니다.',
      // ⭐ Added keys for location picker
      locationPickerTitle: '위치 선택',
      locationPickerMessage: '핀을 드래그하여 동호회의 위치를 설정하세요.',
      setLocationButton: '위치 설정',
      gettingLocationButton: '위치 가져오는 중...',
      locationPermissionDeniedMap: '위치 권한이 필요합니다.',
    },
  },
};

const getDetectedLanguage = () => {
  const locales = Localization.getLocales();
  if (locales && locales.length > 0) {
    const languageCode = locales[0].languageCode;
    if (languageCode && languageCode.startsWith('ko')) {
      return 'ko';
    }
    return languageCode;
  }
  return 'en';
};

i18n
  .use(initReactI18next)
  .init({
    resources,
    lng: getDetectedLanguage(),
    fallbackLng: 'en',
    compatibilityJSON: 'v3',
    interpolation: {
      escapeValue: false,
      format: function (value, format, lng) {
        if (format === 'phoneNumberSuffix' && lng === 'ko') {
          return value + '님!';
        }
        return value;
      }
    },
  });

export default i18n;
